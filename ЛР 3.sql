
--#3 простейших запроса с использованием операторов сравнения
select * from Работники where Стаж = '24';
select * from [Ведомость продажи билетов] where Багаж = 'True' and [Наличие льгот] = 'нет';
select * from [Расписание вылетов] where [Стоимость билета] < 150;

--#3 запроса с использованием логических операторов AND, OR и NOT
select * from [Расписание вылетов] where [Дата вылета] is not null;
select * from [Расписание вылетов] where [Место выбытия] = 'Минск' and [Место прибытия] = 'Стамбул';
select * from Работники where Стаж < 20 or Пол = 'Женский';

--#2 запроса на использование комбинации логических операторов
select* from Работники where Пол ='Женский' AND Стаж >=2 AND Город='Минск';
select * from [Ведомость продажи билетов] where [Кол-во билетов] = '1' or [Наличие льгот] = 'нет';

--#2 запроса на использование выражений над столбцами
select [Место выбытия] + '-' + [Место прибытия] as 'Маршрут' from [Расписание вылетов];
select Фамилия as 'Стаж больше 20 лет' from Работники where Стаж > 20;

--#2 запроса с проверкой на принадлежность множеству
select * from Работники where Город in ('Минск', 'Гродно');
select * from [Ведомость продажи билетов] where [Кол-во билетов] not in (1, 3);

--#2 запроса с проверкой на принадлежность диапазону значений
select * from [Расписание вылетов] where [Стоимость билета] between 100 and 150;
select * from Работники where Стаж between 14 and 23;

--#2 запроса с проверкой на соответствие шаблону
select * from [Ведомость продажи билетов] where lower([ФИО пассажира]) like '%вич';
select * from [Ведомость продажи билетов] where [ФИО пассажира] like '%ев';

--#2 запроса с проверкой на неопределенное значение
select * from Бригады where [Номер бригады] is null;
select * from Самолёты where [Кол-во посадочных мест] is null;



--#2 запроса с использованием декартового произведения двух таблиц
select * from [Расписание вылетов] cross join Самолёты;
select * from Бригады cross join Самолёты;

--#2 запроса с использованием соединения двух таблиц по равенству
select * from[Расписание вылетов] рв  join Самолёты с on с.id = рв.Самолёт;
select * from [Расписание вылетов] рв join [Ведомость продажи билетов] вп on рв.id = вп.[Номер рейса];

--#2 запроса с использованием соединения двух таблиц по равенству и условием отбора
select * from[Расписание вылетов] рв  join Самолёты с on с.id = рв.Самолёт where рв.[Стоимость билета] <150;
select * from [Расписание вылетов] рв join [Ведомость продажи билетов] вп on рв.id = вп.[Номер рейса] where рв.[Место выбытия] = 'Минск';

--#2 запроса с использованием соединения по трем таблицам
select * from [Расписание вылетов] р join [Ведомость продажи билетов] в on р.id = в.[Номер рейса] join Самолёты с on р.Самолёт = с.id;
select * from Самолёты с join Бригады б on с.id = б.Самолёт join Работники р on р.id = с.id;

--#1 запрос с использованием левого внешнего соединения
select * from Самолёты с left join Бригады б on с.id = б.Самолёт;

--#1 запроса на использование правого внешнего соединения
select * from Самолёты с right join Бригады б on с.id = б.Самолёт;



--#2 запроса с использованием функции COUNT
select count(*) from Работники;
select count(*) from [Расписание вылетов];

--#2 запроса с использованием функции SUM
select sum(Стоимость) as ИТОГ from [Ведомость продажи билетов];
select sum([Кол-во посадочных мест]) as [Всего мест] from Самолёты;

--#2 запроса с использованием функций UPPER, LOWER
select UPPER(Фамилия) Фамииля from Работники;
select LOWER(Адрес) Адрес from Работники;

--#2 запроса с использованием временных функций
select GETDATE() as now_date;
select GETUTCDATE()  as time;

--#2 запроса с использованием группировки по одному столбцу
select Должность, count(*) from Работники group by Должность;
select [Кол-во билетов], count(*) from [Ведомость продажи билетов] group by [Кол-во билетов];

--#1 запроса на использование группировки по нескольким столбцам
select Должность, Стаж, count(*) from Работники group by Должность, Стаж;

--#1 запроса с использованием условия отбора групп HAVING
select Стаж, count(*) from Работники group by Стаж having Стаж > 15;

--#2 запроса с использованием фразы HAVING без фразы GROUP BY
select count(*) from Работники having count(*) > 2;
select AVG([Стоимость билета]) from [Расписание вылетов] having AVG([Стоимость билета]) > 100;

--#2 запроса с использованием сортировки по столбцу
select * from Работники order by Фамилия;
select * from Работники order by Фамилия desc;

--#2 запроса на добавление новых данных в таблицу
insert into Бригады([Номер бригады], Самолёт, [Работник аэропорта]) values
(4, 2, 4);
insert into Самолёты([Год выпуска],[Кол-во посадочных мест],Грузоподъёмность) values
('2005', 48, '35');

--#1 запроса на добавление новых данных по результатам запроса в качестве вставляемого значения
insert into Бригады([Номер бригады], Самолёт, [Работник аэропорта])
values (5, (select id from Самолёты where id = 2), 2);


--#2 запроса на обновление существующих данных в таблице
update Бригады set Самолёт = 1 where [Номер бригады] = 3;
update Самолёты set Грузоподъёмность = 11111 where id = 2;

--#1 запроса на обновление существующих данных по результатам подзапроса во фразе WHERE
update Работники set Телефон = 111111 where id = (select id from Самолёты where id = 1);

--#2 запроса на удаление существующих данных
delete from Бригады where [Номер бригады] = 5;
delete from Самолёты where [Год выпуска] < 2007;